services:

    form.type.registration:
        class: AppBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }

    form.type.connection_request:
        class: AppBundle\Form\ConnectionRequestType
        tags:
            - { name: form.type, alias: connection_request }

    success_handler:
        class: AppBundle\Security\SuccessHandler
        arguments:
            - @router

    twig.app_extension:
        class: AppBundle\Twig\AppExtension
        arguments:
            - '@translator'
            - '@user_manager'
            - '@manager.pre_match'
            - '@newly_arrived_date'
        tags:
            - { name: twig.extension }

    twig.municipality_extension:
        class: AppBundle\Twig\MunicipalityExtension
        arguments:
            - '@translator'
            - '@municipality_repository'
        tags:
            - { name: twig.extension }

    app.locale_listener:
        class: AppBundle\EventListener\LocaleListener
        arguments: ["%kernel.default_locale%"]
        tags:
            - { name: kernel.event_subscriber }

    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
            - [ setDefaultLocale, [ %locale% ] ]
            - [ setTranslationFallback, [ true ] ]

    app.user_mailer:
        class: AppBundle\Mailer\UserMailer
        arguments:
            - @mailer
            - @router
            - @templating
            - @translator
            - @event_dispatcher
            - '%days_to_accept_keep_inactive_user_before_deletion%'

    app.mailer:
        class: AppBundle\Mailer\Mailer
        arguments:
            - @mailer
            - @router
            - @templating

    app.form.boolean_choice:
        class: AppBundle\Form\ChoiceTypeBoolean
        tags:
            - { name: form.type, alias: boolean_choice }

    validator.valid_meeting_status:
        class: AppBundle\Validator\Constraints\ValidMeetingStatusValidator
        tags:
            - { name: validator.constraint_validator, alias: valid_meeting_status }

    voter.municipality:
        class: AppBundle\Security\Authorization\Voter\MunicipalityVoter
        public: false
        tags:
            - { name: security.voter }

    voter.user:
        class: AppBundle\Security\Authorization\Voter\UserVoter
        public: false
        tags:
            - { name: security.voter }

    normalizer.pre_match:
        class: AppBundle\Serializer\Normalizer\PreMatchNormalizer
        tags:
            - { name: serializer.normalizer }

    manager.pre_match:
        class: AppBundle\Manager\PreMatchManager
        arguments:
            - "@connection_request_repository"
            - "@user_repository"
            - "@doctrine.orm.entity_manager"
            - '@datetime'

    datetime:
        class: DateTime

    s3.client:
        class: Aws\S3\S3Client
        factory_class: Aws\S3\S3Client
        factory_method: 'factory'
        arguments:
            -
                key: %amazon_s3.key%
                secret: %amazon_s3.secret%
                region: %amazon_s3.region%

    s3.adapter:
        class: Gaufrette\Adapter\AwsS3
        arguments:
            service: @s3.client
            bucket_name: %amazon_s3.bucket%

    s3.file_system:
        class: Gaufrette\Filesystem
        arguments:
            adapter: @s3.adapter

    newly_arrived_date:
        class: AppBundle\Service\NewlyArrivedDate

    listener.increment_confirmation_email_count:
        class: AppBundle\EventListener\IncrementConfirmationEmailCountListener
        arguments:
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: kernel.event_listener, event: meeting_confirmation_email_sent, method: whenEmailIsSent }

    listener.increment_follow_up_email2_count:
        class: AppBundle\EventListener\IncrementFollowUpEmail2CountListener
        arguments:
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: kernel.event_listener, event: follow_up_email2_sent, method: whenEmailIsSent }

